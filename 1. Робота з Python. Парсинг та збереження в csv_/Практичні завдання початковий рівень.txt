1. Робота з Python
Завдання:
---
Парсинг даних:

Напишіть скрипт для збору погоди з API (наприклад, OpenWeatherMap API) і збережіть ці дані в CSV.

Зберіть заголовки новин із вебсайту за допомогою бібліотеки BeautifulSoup.
Обробка даних:

Завантажте файл у форматі CSV (наприклад, дані про продажі) і виконайте:
Очищення даних (видалення пропусків, зміна формату дат).
Розрахунок середнього значення, суми або кількості.
---
Автоматизація:

Напишіть Python-скрипт, який раз на годину збирає дані з API і додає їх у локальну базу (SQLite).

2. Робота з SQL
Завдання:
---
База даних для фільмів:

Створіть базу даних для зберігання інформації про фільми:
Таблиці: "Фільми", "Жанри", "Режисери".
Напишіть запити для:
Вибору фільмів одного жанру.
Підрахунку кількості фільмів кожного режисера.
---
Аналіз продажів:

Завантажте дані про продажі (наприклад, Kaggle: Sales Data).
Виконайте:
Групування даних за місяцями.
Знаходження місяця з найвищими продажами.

3. ETL-процеси
Завдання:
---
ETL:

Extract: Зберіть дані з відкритого API або CSV-файлу.
Transform: Приведіть дані до потрібного формату (очищення, зміна назв колонок).
Load: Завантажте очищені дані в базу (PostgreSQL/MySQL).
---
Автоматизація ETL-процесу:

Використайте бібліотеку Airflow для запуску ETL-скриптів щоденно.

4. Великі дані
Завдання:
---
Робота зі Spark:

Завантажте великий CSV-файл (100+ МБ).
Оптимізуйте обробку даних за допомогою Apache Spark:
Фільтрація та агрегація даних.
Виведення оброблених даних у Parquet.
---
Аналіз потокових даних:

Використайте Kafka для передачі фейкових потокових даних (наприклад, даних сенсорів).
Напишіть обробку потоків у реальному часі за допомогою PySpark.

5. Робота з Linux
Завдання:
---
Автоматизація:

Напишіть Shell-скрипт для копіювання файлів з одного каталогу в інший за розкладом.
Автоматизуйте завантаження файлів з FTP-сервера.
---
Моніторинг даних:

Напишіть скрипт для перевірки, чи доступний сервер (використовуйте команду ping) і логування результатів у файл.

6. Побудова пайплайнів
Завдання:
---
Створення пайплайну:

Завантажуйте дані про криптовалюти з API (наприклад, CoinGecko).
Зберігайте їх у базу даних PostgreSQL.
Створіть автоматичний звіт (PDF або Excel) із графіком зміни цін.
---
Інтерактивна візуалізація:

Використайте Dash або Streamlit, щоб візуалізувати ціни на акції в реальному часі.

7. Проекти для портфоліо
Ідеї:
---
Аналіз трафіку:

Завантажте дані про дорожній трафік (наприклад, з Kaggle) і створіть інтерактивну карту пробок у вашому місті.
---
Платформа для новин:

Збирайте новини з кількох джерел.
Обробляйте дані, видаляйте дублі та зберігайте їх у базі.
Реалізуйте простий веб-інтерфейс для відображення новин.
---
Аналіз клімату:

Зберіть кліматичні дані з відкритих джерел.
Побудуйте модель для прогнозу температури в певному регіоні.